<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.a7a7.module.sea.SeaDao">
	<resultMap id="resultMapObj" type="com.a7a7.module.sea.SeaDto"/>
	
	<select id="seaList" resultMap="resultMapObj">
		select
			sea_id AS seaId
			,sareaDtlNm
			,lat
			,lot
		from
			sea 
		where 1=1
	</select>
	
	
	
	<insert id="seaInsert">
	insert into sea(
		sareaDtlNm
		,lat
		,lot
		,createdtime
		,del_ny as delNy
		,manager_id 
	)values(
		#{sareaDtlNm}
		,#{lat}
		,#{lot}
		,now()
		,0
		,1
	)
	</insert>
	
	
	<select id="forecastList" resultMap="resultMapObj">
		select
			b.sareaDtlNm
			,a.forecast_id AS forecastId
			,a.predcYmd
			,a.predcNoonSeCd
			,a.avgArtmp
			,a.avgWspd
			,a.avgWtem
			,a.avgWvhgt
			,a.avgCrsp
			,a.weather
			,a.totalIndex
			,a.sea_id AS seaId
		from
		forecast a
		join sea b on b.sea_id = a.sea_id
		where 1=1
		and	a.del_ny = 0
		order by a.sea_id asc, a.predcYmd ASC
	</select>
	
	
	<select id="forecastchecklist" resultMap="resultMapObj">
		select
			b.sareaDtlNm
			,a.forecast_id as forecastId
			,a.predcYmd
			,a.predcNoonSeCd
			,a.avgArtmp
			,a.avgWspd
			,a.avgWtem
			,a.avgWvhgt
			,a.avgCrsp
			,a.weather
			,a.totalIndex
			,a.sea_id as seaId
		from
		forecast a
		join sea b on b.sea_id = a.sea_id
		where 1=1
		and a.sea_id = #{seaId}
	</select>
	
	
	
	
	<insert id="forecastInsert">
	insert into forecast(
		predcYmd
		,predcNoonSeCd
		,avgArtmp
		,avgWspd
		,avgWtem
		,avgWvhgt
		,avgCrsp
		,weather
		,totalIndex
		,sea_id 
		,createdtime
		,del_ny 
	)values(
		#{predcYmd}
		,#{predcNoonSeCd}
		,#{avgArtmp}
		,#{avgWspd}
		,#{avgWtem}
		,#{avgWvhgt}
		,#{avgCrsp}
		,#{weather}
		,#{totalIndex}
		,#{seaId}
		,now()
		,0
	)
	</insert>
	
	<update id="forecastUpdate">
	update forecast set
		avgArtmp = #{avgArtmp}
		,avgWspd = #{avgWspd}
		,avgWtem = #{avgWtem}
		,avgWvhgt = #{avgWvhgt}
		,avgCrsp = #{avgCrsp}
		,weather = #{weather}
		,totalIndex = #{totalIndex}
	where 1=1
		and sea_id = #{seaId}
		and predcNoonSeCd = #{predcNoonSeCd}
		and predcYmd = #{predcYmd}
	</update>
	
	<delete id="forecastDelete1">
    delete from forecast
    where predcYmd &lt; CURDATE() - INTERVAL 1 SECOND
	</delete>

	<delete id="forecastDelete2">
    delete from forecast
    where 1=1
    and forecast_id = #{forecastId}
	</delete>

	
	
	
	
	<!--***************-->
	<!--사용자 부분-->
	<!--***************-->
	
	<select id="userindexmap" resultMap="resultMapObj">
		select
			a.sea_id AS seaId
			,a.sareaDtlNm
			,a.lat
			,a.lot
			,b.forecast_id AS forecastId
			,b.predcYmd
			,b.predcNoonSeCd
			,b.weather
			,b.totalIndex
		from
		sea a
		join forecast b on b.sea_id = a.sea_id
		where 1=1
		and b.predcYmd = #{day}
		and b.del_ny =0
	</select>	
	
	<!-- /bada/travel/list -->
	<select id="seaUsrList" resultMap="resultMapObj">
		select
			a.sea_id AS seaId
			,a.sareaDtlNm
			,a.lat
			,a.lot
			,(
			SELECT
				COUNT(*)
			FROM
				review rw
			WHERE 1=1
				AND rw.parent_Type = 1
				AND rw.parent_id = a.sea_id
			)AS reviewCount
		from
			sea a
		where 1=1
			<choose>
				<when test="searchVo.shOption == 1">AND sareaDtlNm LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>
	
	
	
	<select id="countSeaList" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			sea
		Where
			1=1
			<choose>
				<when test="searchVo.shOption == 1 ">AND sareaDtlNm LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>
	
	
	
	<!-- /bada/travel/id -->
	<select id="seaView" resultMap="resultMapObj">
	select
		a.sea_id AS seaId
		,a.sareaDtlNm
		,a.lat
		,a.lot
		,b.del_ny
	from
		sea a
	left join favorite b on b.sea_id = a.sea_id   <!--처음에 favorite 값이 안들어있는 상황이 있기에 left join 사용-->
	<!--left join member c on b.member_id = c.member_id-->
	where a.sea_id = #{seaId}
	</select>
	
	<!-- /bada/travel/id -->
	<select id="findSeaById" resultMap="resultMapObj">
	select
		sea_id AS seaId
		,sareaDtlNm
		,lat
		,lot
	from
		sea
	where 1=1
		AND sea_id = #{seaId}
	</select>
	
	
<!-- /bada/travel/id에서 바다여행지수 -->
	<select id ="localForecastList" resultMap="resultMapObj">
	select
		predcYmd
		,predcNoonSeCd
		,avgArtmp
		,avgWspd
		,avgWtem
		,avgWvhgt
		,avgCrsp
		,weather
		,totalIndex
		,sea_id AS seaId
	from
		forecast 
	where 1=1
	and	sea_id = #{seaId}
	and del_ny = 0
	order by sea_id asc, predcYmd ASC
	</select>
	
	
	
	
	<!-- 즐겨찾기 -->
	<select id="FavoriteD" resultType="Integer">
		select
			del_ny
		from
		 	favorite
	where 1=1
	and sea_id = #{seaId}
	and member_id = #{memberId}
	</select>
	
	
	<select id="seaFavoriteView" resultType="Integer">
	select
		COUNT(*)
	from
		favorite
	where 1=1
	and sea_id = #{seaId}
	and member_id = #{memberId}
	</select>
	
	<insert id="seaFavoriteAdd">
	insert into favorite(
		del_ny
		,member_id
		,sea_id
	)values(
		0
		,#{memberId}
		,#{seaId}
	)
	</insert>
	
	<update id="seaFavoriteUpdate">
	update favorite set
		del_ny = 0
	where sea_id = #{seaId}
	and member_id = #{memberId}
	
	</update>
	
	<update id="favoriteDelete">
	update favorite set
		del_ny = 1
	where sea_id = #{seaId}
	and member_id = #{memberId}
	
	</update>
	
	<select id="favoriteList" resultMap="resultMapObj">
	select 
		a.sareaDtlNm
	from
		sea a
	join favorite b on b.sea_id = a.sea_id
	where 1=1
	and b.member_id = #{memberId}
	and b.del_ny = 0
	</select>
	
	
</mapper>