<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.a7a7.module.sea.SeaDao">
	<resultMap id="resultMapObj" type="com.a7a7.module.sea.SeaDto"/>
	
	<select id="seaList" resultMap="resultMapObj">
		select
			sea_id
			,sareaDtlNm
			,lat
			,lot
		from
			sea 
		where 1=1
	</select>
	
	
	
	<insert id="seaInsert">
	insert into sea(
		sareaDtlNm
		,lat
		,lot
		,createdtime
		,del_ny
		,manager_id
	)values(
		#{sareaDtlNm}
		,#{lat}
		,#{lot}
		,now()
		,0
		,1
	)
	</insert>
	
	
	<select id="forecastList" resultMap="resultMapObj">
		select
			b.sareaDtlNm
			,a.forecast_id
			,a.predcYmd
			,a.predcNoonSeCd
			,a.avgArtmp
			,a.avgWspd
			,a.avgWtem
			,a.avgWvhgt
			,a.avgCrsp
			,a.weather
			,a.totalIndex
			,a.sea_id
		from
		forecast a
		join sea b on b.sea_id = a.sea_id
		where 1=1
		and	a.del_ny = 0
	</select>
	
	
	<select id="forecastchecklist" resultMap="resultMapObj">
		select
			b.sareaDtlNm
			,a.forecast_id
			,a.predcYmd
			,a.predcNoonSeCd
			,a.avgArtmp
			,a.avgWspd
			,a.avgWtem
			,a.avgWvhgt
			,a.avgCrsp
			,a.weather
			,a.totalIndex
			,a.sea_id
		from
		forecast a
		join sea b on b.sea_id = a.sea_id
		where 1=1
		and a.sea_id = #{sea_id}
	</select>
	
	
	
	
	<insert id="forecastInsert">
	insert into forecast(
		predcYmd
		,predcNoonSeCd
		,avgArtmp
		,avgWspd
		,avgWtem
		,avgWvhgt
		,avgCrsp
		,weather
		,totalIndex
		,sea_id
		,createdtime
		,del_ny
	)values(
		#{predcYmd}
		,#{predcNoonSeCd}
		,#{avgArtmp}
		,#{avgWspd}
		,#{avgWtem}
		,#{avgWvhgt}
		,#{avgCrsp}
		,#{weather}
		,#{totalIndex}
		,#{sea_id}
		,now()
		,0
	)
	</insert>
	
	<update id="forecastUpdate">
	update forecast set
		avgArtmp = #{avgArtmp}
		,avgWspd = #{avgWspd}
		,avgWtem = #{avgWtem}
		,avgWvhgt = #{avgWvhgt}
		,avgCrsp = #{avgCrsp}
		,weather = #{weather}
		,totalIndex = #{totalIndex}
	where 1=1
		and sea_id = #{sea_id}
		and predcNoonSeCd = #{predcNoonSeCd}
		and predcYmd = #{predcYmd}
	</update>
	
	<update id="forecastDelete1">
    update forecast set 
    	del_ny = 1
    where predcYmd &lt; CURDATE() - INTERVAL 1 SECOND
    and sea_id = #{sea_id}
	</update>

	<update id="forecastDelete2">
    update forecast set 
    	del_ny = 1
    where 1=1
    and forecast_id = #{forecast_id}
	</update>

	
	<select id="countSeaList" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			sea
		Where
			1=1
			<choose>
				<when test="searchVo.shOption == 1">AND sareaDtlNm LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>
	
	
	<!--사용자 부분-->
	<select id="seaUsrList" resultMap="resultMapObj">
		select
			sea_id
			,sareaDtlNm
			,lat
			,lot
		from
			sea 
		where 1=1
			<choose>
				<when test="searchVo.shOption == 1">AND sareaDtlNm LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>
	
	<select id="seaView" resultMap="resultMapObj">
	select
		a.sareaDtlNm
		,a.lat
		,a.lot
	from
		sea a
	where sea_id = #{sea_id}
	</select>
	
	
	<!-- 날짜는 지금 시간으로부터 5일동안 보이는것만 하게.-->
	<select id ="localForecastList" resultMap="resultMapObj">
	select
		predcYmd
		,predcNoonSeCd
		,avgArtmp
		,avgWspd
		,avgWtem
		,avgWvhgt
		,avgCrsp
		,weather
		,totalIndex
		,sea_id
	from
		forecast 
	where 1=1
	and	sea_id = #{sea_id}
	and del_ny = 0
	</select>
	
</mapper>